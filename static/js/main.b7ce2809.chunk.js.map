{"version":3,"sources":["components/Ingredients/Ingredients.js","components/UpdateInstructions/UpdateInstructions.js","components/Instructions/Instructions.js","components/Card/Card.js","components/Cards/Cards.js","components/NewRecipe/NewRecipe.js","components/Main/Main.js","components/Navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Ingredients","recipe","useState","show","setShow","ingredients","setIngredients","handleClose","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","className","map","ingr","index","console","log","newArr","deletedInst","splice","removeIngr","Footer","UpdateInstructions","instructions","handleEdit","inst","onChange","event","value","Instructions","setInstructions","removeInst","preventDefault","input","target","Card","handleConfirmation","name","servingSize","prepTime","cookTime","datePublished","size","description","Cards","recipes","filteredData","setFilteredData","result","confirm","removeRecipe","deletedRecipe","type","placeholder","searchWord","newFilter","filter","toLowerCase","includes","id","NewRecipe","setModalOpen","handleAddFormChange","handleAddFormSubmit","onSubmit","required","Main","data","setRecipes","modalOpen","addFormData","setAddFormData","fieldName","getAttribute","fieldValue","newFormData","newRecipe","Math","floor","random","newRecipes","Navbar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"42dAKaA,EAAc,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAE1B,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAAsCF,mBAASD,EAAOI,aAAtD,mBAAOA,EAAP,KAAoBC,EAApB,KAEMC,EAAc,kBAAMH,GAAQ,IAYlC,OAEI,gCAEI,cAACI,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAff,kBAAMN,GAAQ,IAezB,8BAIA,eAACO,EAAA,EAAD,CAAOR,KAAMA,EAAMS,OAAQL,EAA3B,UACI,cAACI,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,4BAEJ,cAACJ,EAAA,EAAMK,KAAP,UACI,oBAAIC,UAAU,WAAd,SACKZ,EAAYa,KAAI,SAACC,EAAMC,GACpB,OACI,qBAAgBH,UAAU,WAA1B,UACKE,EACD,wBACIF,UAAU,UACVP,QAAS,YA7B1B,SAAAU,GACfC,QAAQC,IAAIF,EAAO,wBACnB,IAAIG,EAAM,YAAOlB,GACbmB,EAAcD,EAAOE,OAAOL,EAAO,GACvCC,QAAQC,IAAIE,GACZlB,EAAeiB,GAyBqBG,CAAWN,IAHnB,sBAFKA,UAazB,eAACT,EAAA,EAAMgB,OAAP,WACI,cAACnB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASH,EAArC,mBAGA,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAhB,sCCnDPmB,G,MAAqB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WAE/C,EAAwB5B,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMG,EAAc,kBAAMH,GAAQ,IAGlC,OACI,gCAEI,cAACI,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QALf,kBAAMN,GAAQ,IAKzB,+BAIA,eAACO,EAAA,EAAD,CAAOR,KAAMA,EAAMS,OAAQL,EAA3B,UACI,cAACI,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,qBAEJ,cAACJ,EAAA,EAAMK,KAAP,UACI,6BACKa,EAAaX,KAAI,SAACa,EAAMX,GACrB,OACI,oBAAgBH,UAAU,cAA1B,SACI,uBACIe,SAAU,SAACC,GAAD,OAAWH,EAAWG,EAAOb,IACvCc,MAAOH,KAHNX,UAUzB,cAACT,EAAA,EAAMgB,OAAP,UACI,cAACnB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASH,EAArC,6BC/BP4B,G,MAAe,SAAC,GAAgB,IAAdlC,EAAa,EAAbA,OAE3B,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMG,EAAc,kBAAMH,GAAQ,IAGlC,EAAwCF,mBAASD,EAAO4B,cAAxD,mBAAOA,EAAP,KAAqBO,EAArB,KAyBA,OAEI,gCAEI,cAAC5B,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QA/Bf,kBAAMN,GAAQ,IA+BzB,+BAIA,eAACO,EAAA,EAAD,CAAOR,KAAMA,EAAMS,OAAQL,EAA3B,UACI,cAACI,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,6BAEJ,eAACJ,EAAA,EAAMK,KAAP,WAEI,oBAAIC,UAAU,GAAd,SAEKY,EAAaX,KAAI,SAACa,EAAMX,GACrB,OACQ,qBAAgBH,UAAU,YAA1B,UACKc,EACD,wBACId,UAAU,UACVP,QAAS,YA7C9B,SAAAU,GACfC,QAAQC,IAAIF,EAAO,wBACnB,IAAIG,EAAM,YAAOM,GACbL,EAAcD,EAAOE,OAAOL,EAAO,GACvCC,QAAQC,IAAIE,GACZY,EAAgBb,GAyCwBc,CAAWjB,IAHnB,sBAFKA,QAczB,cAAC,EAAD,CAAoBS,aAAcA,EAAcC,WA/C7C,SAACG,EAAOb,GACvBa,EAAMK,iBAEN,IAAMC,EAAQN,EAAMO,OAAON,MAErBX,EAAM,YAAOM,GAEnBN,EAAOH,GAASmB,EAEhBH,EAAgBb,GAEhBF,QAAQC,IAAIiB,SAuCJ,cAAC5B,EAAA,EAAMgB,OAAP,UACI,cAACnB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASH,EAArC,6BCjEPkC,G,MAAO,SAAC,GAA2C,IAAzCxC,EAAwC,EAAxCA,OAAQmB,EAAgC,EAAhCA,MAAOsB,EAAyB,EAAzBA,mBAElC,EAAwBxC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMG,EAAc,kBAAMH,GAAQ,IAGlC,OAEI,sBAAKa,UAAU,OAAf,UAEI,eAACN,EAAA,EAAD,CAAOR,KAAMA,EAAMS,OAAQL,EAA3B,UACI,cAACI,EAAA,EAAMK,KAAP,UACI,qBAAKC,UAAU,iBAAf,SACI,kCACI,gCACI,+BACI,sCACA,8CACA,2CACA,8CACA,qDAGR,gCACI,+BACI,6BAAKhB,EAAO0C,OACZ,6BAAK1C,EAAO2C,cACZ,6BAAK3C,EAAO4C,WACZ,6BAAK5C,EAAO6C,WACZ,6BAAK7C,EAAO8C,4BAMhC,cAACpC,EAAA,EAAMgB,OAAP,UACI,cAACnB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASH,EAArC,wBAMR,sBAAKU,UAAU,WAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAACT,EAAA,EAAD,CAAQC,QAAQ,UAAUuC,KAAK,KAAKtC,QAxCjC,kBAAMN,GAAQ,IAwCjB,4BAIJ,oBAAIa,UAAU,YAAd,SAA2BhB,EAAO0C,OAClC,mBAAG1B,UAAU,kBAAb,SAAgChB,EAAOgD,cACvC,sBAAKhC,UAAU,cAAf,UACI,cAAC,EAAD,CAAchB,OAAQA,IACtB,cAAC,EAAD,CAAaA,OAAQA,UAG7B,uBACA,wBACIS,QAAS,kBAAMgC,EAAmBtB,IADtC,gCC5DC8B,G,MAAQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEpB,EAAwCjD,mBAASiD,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAUMX,EAAqB,SAACtB,GAExB,IAAIkC,EAASC,QAAQ,4CACrBlC,QAAQC,IAAIgC,GACTA,GACCE,EAAapC,IAIfoC,EAAe,SAAApC,GACjBC,QAAQC,IAAIF,EAAO,iBACnB,IAAIG,EAAM,YAAO6B,GACbK,EAAgBlC,EAAOE,OAAOL,EAAO,GACzCC,QAAQC,IAAImC,GACZJ,EAAgB9B,IAGpB,OACI,sBAAKN,UAAU,eAAf,UAEI,qBAAKA,UAAU,QAAf,SACI,uBACIyC,KAAK,OACLC,YAAY,YACZ3B,SAhCK,SAACC,GAClB,IAAM2B,EAAa3B,EAAMO,OAAON,MAC1B2B,EAAYV,EAAQW,QAAO,SAAC7D,GAC9B,OAAOA,EAAO0C,KAAKoB,cAAcC,SAASJ,EAAWG,kBAEzDV,EAAgBQ,QA+BZ,qBAAK5C,UAAU,cAAf,SACKmC,EAAalC,KAAI,SAACjB,EAAQmB,GAAT,OACd,cAAC,EAAD,CAAMnB,OAAQA,EAAQmB,MAAOA,EAAOoC,aAAcA,EAA8Bd,mBAAoBA,GAA/BzC,EAAOgE,cC3CnFC,G,MAAY,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,aAAcC,EAA+C,EAA/CA,oBAAqBC,EAA0B,EAA1BA,oBAE3D,OACI,8BACI,uBAAMC,SAAUD,EAAqBpD,UAAU,OAA/C,UAEI,uBACIA,UAAU,qBACVyC,KAAK,OACLf,KAAK,OACL4B,SAAS,WACTZ,YAAY,OACZ3B,SAAUoC,IAEd,uBACInD,UAAU,qBACVyC,KAAK,OACLf,KAAK,cACL4B,SAAS,WACTZ,YAAY,cACZ3B,SAAUoC,IAEd,uBACInD,UAAU,YACVyC,KAAK,OACLa,SAAS,WACT5B,KAAK,gBACLgB,YAAY,aACZ3B,SAAUoC,IAEd,uBACInD,UAAU,qBACVyC,KAAK,OACLf,KAAK,WACL4B,SAAS,WACTZ,YAAY,YACZ3B,SAAUoC,IAEd,uBACInD,UAAU,qBACVyC,KAAK,OACLf,KAAK,WACL4B,SAAS,WACTZ,YAAY,eACZ3B,SAAUoC,IAEd,uBACInD,UAAU,qBACVyC,KAAK,OACLf,KAAK,cACL4B,SAAS,WACTZ,YAAY,eACZ3B,SAAUoC,IAEd,wBACInD,UAAU,UACVyC,KAAK,SAFT,iBAIA,wBACIzC,UAAU,UACVP,QAAS,WAAQyD,GAAa,IAFlC,0BCvDHK,G,MAAO,WAEhB,MAA8BtE,mBAASuE,GAAvC,mBAAOtB,EAAP,KAAgBuB,EAAhB,KAEA,EAAkCxE,oBAAS,GAA3C,mBAAOyE,EAAP,KAAkBR,EAAlB,KAEA,EAAsCjE,mBAAS,CAC3CyC,KAAM,GACNM,YAAa,GACbF,cAAe,GACfD,SAAU,GACVF,YAAa,GACbC,SAAU,GACVhB,aAAc,CACV,cAEJxB,YAAY,CACR,aAXR,mBAAOuE,EAAP,KAAoBC,EAApB,KAmDA,OACI,gCACI,sBAAK5D,UAAU,OAAf,UACI,wBACIA,UAAU,UACVP,QAAS,WACLyD,GAAa,IAHrB,4BAOCQ,GAAa,cAAC,EAAD,CACVR,aAAcA,EACdC,oBAhDY,SAACnC,GACzBA,EAAMK,iBAEN,IAAMwC,EAAY7C,EAAMO,OAAOuC,aAAa,QAEtCC,EAAa/C,EAAMO,OAAON,MAE1B+C,EAAW,eAAQL,GAEzBK,EAAYH,GAAaE,EAEzBH,EAAeI,IAsCHZ,oBAnCY,SAACpC,GACzBA,EAAMK,iBAEN,IAAM4C,EAAY,CACdjB,GAAIkB,KAAKC,MAAsB,IAAhBD,KAAKE,UACpB1C,KAAMiC,EAAYjC,KAClBM,YAAa2B,EAAY3B,YACzBF,cAAe6B,EAAY7B,cAC3BH,YAAagC,EAAYhC,YACzBC,SAAU+B,EAAY/B,SACtBC,SAAU8B,EAAY9B,SACtBjB,aAAc,CAAC+C,EAAY/C,cAC3BxB,YAAa,CAACuE,EAAYvE,cAGxBiF,EAAU,sBAAOnC,GAAP,CAAgB+B,IAEhCR,EAAWY,GACXjE,QAAQC,IAAI6B,GACZgB,GAAa,SAoBT,cAAC,EAAD,CAAOhB,QAASA,SC7EfoC,G,MAAS,WAClB,OACI,sBAAKtE,UAAU,aAAf,UACI,yCACA,yE,MCSGuE,MAVf,WACE,OACE,sBAAKvE,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCESwE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b7ce2809.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport './Ingredients.css'\n\nexport const Ingredients = ({ recipe }) => {\n\n    const [show, setShow] = useState(false);\n\n    const [ingredients, setIngredients] = useState(recipe.ingredients)\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const removeIngr = index => {\n        console.log(index, 'index of instruction')\n        let newArr = [...ingredients]\n        let deletedInst = newArr.splice(index, 1)\n        console.log(deletedInst)\n        setIngredients(newArr)\n    }\n\n\n    return (\n\n        <div>\n\n            <Button variant=\"primary\" onClick={handleShow}>\n                View Ingredients\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Ingredients</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <ul className='ingrList'>\n                        {ingredients.map((ingr, index) => {\n                            return (\n                                <li key={index} className='ingrItem'>\n                                    {ingr}\n                                    <button\n                                        className='ingrBTN'\n                                        onClick={() => {\n                                            removeIngr(index)\n                                        }}\n                                    >Remove</button>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"secondary\">\n                        Add Ingredient\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport './UpdateInstructions.css'\n\nexport const UpdateInstructions = ({ instructions, handleEdit }) => {\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <div>\n\n            <Button variant=\"primary\" onClick={handleShow}>\n                Edit Instructions\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <ul>\n                        {instructions.map((inst, index) => {\n                            return (\n                                <li key={index} className='updateInput'>\n                                    <input\n                                        onChange={(event) => handleEdit(event, index)}\n                                        value={inst}\n                                    ></input>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { UpdateInstructions } from '../UpdateInstructions/UpdateInstructions';\nimport './Instructions.css'\n\nexport const Instructions = ({ recipe }) => {\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    \n    const [instructions, setInstructions] = useState(recipe.instructions)\n\n    const removeInst = index => {\n        console.log(index, 'index of instruction')\n        let newArr = [...instructions]\n        let deletedInst = newArr.splice(index, 1)\n        console.log(deletedInst)\n        setInstructions(newArr)\n    }\n\n    const handleEdit = (event, index) => {\n        event.preventDefault()\n\n        const input = event.target.value;\n\n        const newArr = [...instructions]\n\n        newArr[index] = input;\n\n        setInstructions(newArr)\n\n        console.log(input)\n\n    }\n\n    return (\n\n        <div>\n\n            <Button variant=\"primary\" onClick={handleShow}>\n                View Instructions\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Instructions</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <ul className=''>\n\n                        {instructions.map((inst, index) => {\n                            return(\n                                    <li key={index} className='instStyle'>\n                                        {inst}\n                                        <button\n                                            className='instBTN'\n                                            onClick={() => {\n                                                removeInst(index)\n                                            }}\n                                        >Remove</button>\n                                    </li>\n                            )\n                        })}\n\n                    </ul>\n                        \n                    <UpdateInstructions instructions={instructions} handleEdit={handleEdit}/>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { Ingredients } from '../Ingredients/Ingredients';\nimport { Instructions } from '../Instructions/Instructions';\n\nimport './Card.css'\n\nexport const Card = ({ recipe, index, handleConfirmation }) => {\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n\n        <div className='card' >\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Body>\n                    <div className='tableContainer'>\n                        <table>\n                            <thead>\n                                <tr>\n                                    <td>Name</td>\n                                    <td>Serving Size</td>\n                                    <td>Prep Time</td>\n                                    <td>Cooking Time</td>\n                                    <td>Date Published</td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>{recipe.name}</td>\n                                    <td>{recipe.servingSize}</td>\n                                    <td>{recipe.prepTime}</td>\n                                    <td>{recipe.cookTime}</td>\n                                    <td>{recipe.datePublished}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <div className='cardBody'>\n                <div className='cardHeader'>\n                    <Button variant=\"primary\" size=\"sm\" onClick={handleShow}>\n                        View Details\n                    </Button>\n                </div>\n                <h2 className='cardTitle'>{recipe.name}</h2>\n                <p className='cardDescription'>{recipe.description}</p>\n                <div className='cardDisplay'>\n                    <Instructions recipe={recipe} />\n                    <Ingredients recipe={recipe} />\n                </div>\n            </div>\n            <br />\n            <button\n                onClick={() => handleConfirmation(index)}\n            >Remove Recipe</button>\n\n\n        </div>\n\n\n    )\n}\n","import React, { useState } from 'react'\nimport { Card } from '../Card/Card';\nimport './Cards.css'\n\nexport const Cards = ({ recipes }) => {\n\n    const [filteredData, setFilteredData] = useState(recipes);\n\n    const handleFilter = (event) => {\n        const searchWord = event.target.value;\n        const newFilter = recipes.filter((recipe) => {\n            return recipe.name.toLowerCase().includes(searchWord.toLowerCase())\n        })\n        setFilteredData(newFilter)\n    }\n\n    const handleConfirmation = (index) => {\n        // eslint-disable-next-line no-restricted-globals\n        let result = confirm('Are you sure you want to delete forever?');\n        console.log(result)\n        if(result){\n            removeRecipe(index)\n        } \n    }\n\n    const removeRecipe = index => {\n        console.log(index, 'key of recipe')\n        let newArr = [...filteredData]\n        let deletedRecipe = newArr.splice(index, 1)\n        console.log(deletedRecipe)\n        setFilteredData(newArr)\n    }\n\n    return (\n        <div className='cardsSection'>\n\n            <div className='input'>\n                <input\n                    type='text'\n                    placeholder='Search...'\n                    onChange={handleFilter}\n                />\n            </div>\n\n            <div className='cardWrapper'>\n                {filteredData.map((recipe, index) => (\n                    <Card recipe={recipe} index={index} removeRecipe={removeRecipe} key={recipe.id} handleConfirmation={handleConfirmation}/>\n                ))}\n            </div>\n\n        </div>\n\n    )\n}\n","import React from 'react'\nimport './NewRecipe.css'\n\nexport const NewRecipe = ({ setModalOpen, handleAddFormChange, handleAddFormSubmit }) => {\n\n    return (\n        <div>\n            <form onSubmit={handleAddFormSubmit} className='form'>\n\n                <input\n                    className='formItem formInput'\n                    type='text'\n                    name='name'\n                    required='required'\n                    placeholder='Name'\n                    onChange={handleAddFormChange}\n                ></input>\n                <input\n                    className='formItem formInput'\n                    type='text'\n                    name='description'\n                    required='required'\n                    placeholder='Description'\n                    onChange={handleAddFormChange}\n                ></input>\n                <input\n                    className='formInput'\n                    type=\"date\"\n                    required='required'\n                    name=\"datePublished\"\n                    placeholder=\"MM/DD/YYYY\"\n                    onChange={handleAddFormChange}\n                ></input>\n                <input\n                    className='formItem formInput'\n                    type='text'\n                    name='prepTime'\n                    required='required'\n                    placeholder='Prep Time'\n                    onChange={handleAddFormChange}\n                ></input>\n                <input\n                    className='formItem formInput'\n                    type='text'\n                    name='cookTime'\n                    required='required'\n                    placeholder='Cooking Time'\n                    onChange={handleAddFormChange}\n                ></input>\n                <input\n                    className='formItem formInput'\n                    type='text'\n                    name='servingSize'\n                    required='required'\n                    placeholder='Serving Size'\n                    onChange={handleAddFormChange}\n                ></input>\n                <button\n                    className='cardBTN'\n                    type='submit'\n                >Add</button>\n                <button\n                    className='cardBTN'\n                    onClick={() => { setModalOpen(false) }}\n                >Close</button>\n            </form>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport data from '../../mock.data.json'\nimport { Cards } from '../Cards/Cards';\nimport { NewRecipe } from '../NewRecipe/NewRecipe';\nimport './Main.css'\n\nexport const Main = () => {\n\n    const [recipes, setRecipes] = useState(data)\n\n    const [modalOpen, setModalOpen] = useState(false);\n\n    const [addFormData, setAddFormData] = useState({\n        name: '',\n        description: '',\n        datePublished: '',\n        cookTime: '',\n        servingSize: '',\n        prepTime: '',\n        instructions: [\n            \"Boil water\"\n        ],\n        ingredients:[\n            \"chicken\"\n        ]\n    });\n\n    const handleAddFormChange = (event) => {\n        event.preventDefault()\n\n        const fieldName = event.target.getAttribute('name');\n\n        const fieldValue = event.target.value;\n\n        const newFormData = { ...addFormData };\n\n        newFormData[fieldName] = fieldValue;\n\n        setAddFormData(newFormData);\n    }\n\n    const handleAddFormSubmit = (event) => {\n        event.preventDefault();\n\n        const newRecipe = {\n            id: Math.floor(Math.random() * 1000),\n            name: addFormData.name,\n            description: addFormData.description,\n            datePublished: addFormData.datePublished,\n            servingSize: addFormData.servingSize,\n            prepTime: addFormData.prepTime,\n            cookTime: addFormData.cookTime,\n            instructions: [addFormData.instructions],\n            ingredients: [addFormData.ingredients],\n        }\n\n        const newRecipes = [...recipes, newRecipe]\n\n        setRecipes(newRecipes)\n        console.log(recipes)\n        setModalOpen(false)\n    }\n\n    return (\n        <div>\n            <div className='main'>\n                <button\n                    className='cardBTN'\n                    onClick={() => {\n                        setModalOpen(true)\n                    }}\n                >Add New Recipe</button>\n\n                {modalOpen && <NewRecipe\n                    setModalOpen={setModalOpen}\n                    handleAddFormChange={handleAddFormChange}\n                    handleAddFormSubmit={handleAddFormSubmit}\n                />}\n\n            </div>\n            <Cards recipes={recipes} />\n        </div>\n    )\n}\n","import React from 'react'\nimport './Navbar.css'\n\nexport const Navbar = () => {\n    return (\n        <div className='navWrapper'>\n            <h1>RECI-PZ</h1>\n            <p>Your easy peasy personal cook book!</p>\n        </div>\n    )\n}\n","import './App.css';\nimport { Main } from './components/Main/Main';\nimport { Navbar } from './components/Navbar/Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Main/>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/AddIngredient/AddIngredient.js","components/Ingredients/Ingredients.js","components/UpdateInstructions/UpdateInstructions.js","components/AddInstructions/AddInstructions.js","components/Instructions/Instructions.js","components/Card/Card.js","components/Cards/Cards.js","components/NewRecipe/NewRecipe.js","components/Main/Main.js","components/Navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["AddIngredient","handleAddIngredient","handleGetNewIngr","useState","show","setShow","handleClose","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","onSubmit","name","onChange","event","type","Footer","Ingredients","recipe","fieldValue","ingredients","setIngredients","className","map","ingr","index","console","log","newArr","deletedInst","splice","removeIngr","preventDefault","target","value","newInstArr","concat","UpdateInstructions","instructions","handleEdit","inst","AddInstructions","handleAddInstruction","handleGetNewInst","Instructions","setInstructions","removeInst","input","Card","handleConfirmation","servingSize","prepTime","cookTime","datePublished","size","description","Cards","recipes","filteredData","setFilteredData","result","confirm","removeRecipe","deletedRecipe","placeholder","searchWord","newFilter","filter","toLowerCase","includes","id","NewRecipe","setModalOpen","handleAddFormChange","handleAddFormSubmit","required","Main","data","setRecipes","modalOpen","addFormData","setAddFormData","fieldName","getAttribute","newFormData","newRecipe","Math","floor","random","newRecipes","Navbar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f27f0d61.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport './AddIngredient.css'\n\nexport const AddIngredient = ({ handleAddIngredient, handleGetNewIngr}) => {\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <div>\n\n            <Button variant=\"primary\" onClick={handleShow}>\n                Add Ingredient\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form onSubmit={handleAddIngredient}>\n\n                        <input\n                            name='ingredients'\n                            onChange={(event) => handleGetNewIngr(event)}\n                        ></input>\n                        <button\n                            type='submit'\n                        >Add</button>\n\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport './Ingredients.css'\nimport { AddIngredient } from '../AddIngredient/AddIngredient';\n\nexport const Ingredients = ({ recipe }) => {\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    let fieldValue = null;\n\n    const [ingredients, setIngredients] = useState(recipe.ingredients)\n\n    const removeIngr = index => {\n        console.log(index, 'index of instruction')\n        let newArr = [...ingredients]\n        let deletedInst = newArr.splice(index, 1)\n        console.log(deletedInst)\n        setIngredients(newArr)\n    }\n\n    const handleGetNewIngr = (event) => {\n        event.preventDefault()\n\n        fieldValue = event.target.value;\n\n        console.log(fieldValue)\n        \n    }\n\n    const handleAddIngredient = (event) => {\n        event.preventDefault()\n\n        let newInstArr = [...ingredients].concat(fieldValue)\n\n        setIngredients(newInstArr)\n    }\n\n\n    return (\n\n        <div>\n\n            <Button variant=\"primary\" onClick={handleShow}>\n                View Ingredients\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Ingredients</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <ul className='ingrList'>\n                        {ingredients.map((ingr, index) => {\n                            return (\n                                <li key={index} className='ingrItem'>\n                                    {ingr}\n                                    <button\n                                        className='ingrBTN'\n                                        onClick={() => {\n                                            removeIngr(index)\n                                        }}\n                                    >Remove</button>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                    <AddIngredient handleGetNewIngr={handleGetNewIngr} handleAddIngredient={handleAddIngredient}/>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"secondary\">\n                        Add Ingredient\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport './UpdateInstructions.css'\n\nexport const UpdateInstructions = ({ instructions, handleEdit }) => {\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <div>\n\n            <Button variant=\"primary\" onClick={handleShow}>\n                Edit Instructions\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <ul>\n                        {instructions.map((inst, index) => {\n                            return (\n                                <li key={index} className='updateInput'>\n                                    <input\n                                        onChange={(event) => handleEdit(event, index)}\n                                        value={inst}\n                                    ></input>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport './AddInstructions.css'\n\nexport const AddInstructions = ({ handleAddInstruction, handleGetNewInst}) => {\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <div>\n\n            <Button variant=\"primary\" onClick={handleShow}>\n                Add Instructions\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form onSubmit={handleAddInstruction}>\n\n                        <input\n                            name='instructions'\n                            onChange={(event) => handleGetNewInst(event)}\n                        ></input>\n                        <button\n                            type='submit'\n                        >Add</button>\n\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { UpdateInstructions } from '../UpdateInstructions/UpdateInstructions';\nimport {AddInstructions} from '../AddInstructions/AddInstructions'\nimport './Instructions.css'\n\nexport const Instructions = ({ recipe }) => {\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    let fieldValue = null;\n    \n    const [instructions, setInstructions] = useState(recipe.instructions)\n\n    const removeInst = index => {\n        console.log(index, 'index of instruction')\n        let newArr = [...instructions]\n        let deletedInst = newArr.splice(index, 1)\n        console.log(deletedInst)\n        setInstructions(newArr)\n    }\n\n    const handleGetNewInst = (event) => {\n        event.preventDefault()\n\n        fieldValue = event.target.value;\n\n        console.log(fieldValue)\n        \n    }\n\n    const handleAddInstruction = (event) => {\n        event.preventDefault()\n\n        let newInstArr = [...instructions].concat(fieldValue)\n\n        setInstructions(newInstArr)\n    }\n\n    const handleEdit = (event, index) => {\n        event.preventDefault()\n\n        const input = event.target.value;\n\n        const newArr = [...instructions]\n\n        newArr[index] = input;\n\n        setInstructions(newArr)\n\n        console.log(input)\n    }\n\n\n    return (\n\n        <div>\n\n            <Button variant=\"primary\" onClick={handleShow}>\n                View Instructions\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Instructions</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <ul className=''>\n\n                        {instructions.map((inst, index) => {\n                            return(\n                                    <li key={index} className='instStyle'>\n                                        {inst}\n                                        <button\n                                            className='instBTN'\n                                            onClick={() => {\n                                                removeInst(index)\n                                            }}\n                                        >Remove</button>\n                                    </li>\n                            )\n                        })}\n\n                    </ul>\n                    \n                    <AddInstructions handleAddInstruction={handleAddInstruction} handleGetNewInst={handleGetNewInst}/>\n                    <UpdateInstructions instructions={instructions} handleEdit={handleEdit}/>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { Ingredients } from '../Ingredients/Ingredients';\nimport { Instructions } from '../Instructions/Instructions';\n\nimport './Card.css'\n\nexport const Card = ({ recipe, index, handleConfirmation }) => {\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n\n        <div className='card' >\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Body>\n                    <div className='tableContainer'>\n                        <table>\n                            <thead>\n                                <tr>\n                                    <td>Name</td>\n                                    <td>Serving Size</td>\n                                    <td>Prep Time</td>\n                                    <td>Cooking Time</td>\n                                    <td>Date Published</td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>{recipe.name}</td>\n                                    <td>{recipe.servingSize}</td>\n                                    <td>{recipe.prepTime}</td>\n                                    <td>{recipe.cookTime}</td>\n                                    <td>{recipe.datePublished}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <div className='cardBody'>\n                <div className='cardHeader'>\n                    <Button variant=\"primary\" size=\"sm\" onClick={handleShow}>\n                        View Details\n                    </Button>\n                </div>\n                <h2 className='cardTitle'>{recipe.name}</h2>\n                <p className='cardDescription'>{recipe.description}</p>\n                <div className='cardDisplay'>\n                    <Instructions recipe={recipe} />\n                    <Ingredients recipe={recipe} />\n                </div>\n            </div>\n            <br />\n            <button\n                onClick={() => handleConfirmation(index)}\n            >Remove Recipe</button>\n\n\n        </div>\n\n\n    )\n}\n","import React, { useState } from 'react'\nimport { Card } from '../Card/Card';\nimport './Cards.css'\n\nexport const Cards = ({ recipes }) => {\n\n    const [filteredData, setFilteredData] = useState(recipes);\n\n    const handleFilter = (event) => {\n        const searchWord = event.target.value;\n        const newFilter = recipes.filter((recipe) => {\n            return recipe.name.toLowerCase().includes(searchWord.toLowerCase())\n        })\n        setFilteredData(newFilter)\n    }\n\n    const handleConfirmation = (index) => {\n        // eslint-disable-next-line no-restricted-globals\n        let result = confirm('Are you sure you want to delete forever?');\n        console.log(result)\n        if(result){\n            removeRecipe(index)\n        } \n    }\n\n    const removeRecipe = index => {\n        console.log(index, 'key of recipe')\n        let newArr = [...filteredData]\n        let deletedRecipe = newArr.splice(index, 1)\n        console.log(deletedRecipe)\n        setFilteredData(newArr)\n    }\n\n    return (\n        <div className='cardsSection'>\n\n            <div className='input'>\n                <input\n                    type='text'\n                    placeholder='Search...'\n                    onChange={handleFilter}\n                />\n            </div>\n\n            <div className='cardWrapper'>\n                {filteredData.map((recipe, index) => (\n                    <Card recipe={recipe} index={index} removeRecipe={removeRecipe} key={recipe.id} handleConfirmation={handleConfirmation}/>\n                ))}\n            </div>\n\n        </div>\n\n    )\n}\n","import React from 'react'\nimport './NewRecipe.css'\n\nexport const NewRecipe = ({ setModalOpen, handleAddFormChange, handleAddFormSubmit }) => {\n\n    return (\n        <div>\n            <form onSubmit={handleAddFormSubmit} className='form'>\n\n                <input\n                    className='formItem formInput'\n                    type='text'\n                    name='name'\n                    required='required'\n                    placeholder='Name'\n                    onChange={handleAddFormChange}\n                ></input>\n                <input\n                    className='formItem formInput'\n                    type='text'\n                    name='description'\n                    required='required'\n                    placeholder='Description'\n                    onChange={handleAddFormChange}\n                ></input>\n                <input\n                    className='formInput'\n                    type=\"date\"\n                    required='required'\n                    name=\"datePublished\"\n                    placeholder=\"MM/DD/YYYY\"\n                    onChange={handleAddFormChange}\n                ></input>\n                <input\n                    className='formItem formInput'\n                    type='text'\n                    name='prepTime'\n                    required='required'\n                    placeholder='Prep Time'\n                    onChange={handleAddFormChange}\n                ></input>\n                <input\n                    className='formItem formInput'\n                    type='text'\n                    name='cookTime'\n                    required='required'\n                    placeholder='Cooking Time'\n                    onChange={handleAddFormChange}\n                ></input>\n                <input\n                    className='formItem formInput'\n                    type='text'\n                    name='servingSize'\n                    required='required'\n                    placeholder='Serving Size'\n                    onChange={handleAddFormChange}\n                ></input>\n                <button\n                    className='cardBTN'\n                    type='submit'\n                >Add</button>\n                <button\n                    className='cardBTN'\n                    onClick={() => { setModalOpen(false) }}\n                >Close</button>\n            </form>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport data from '../../mock.data.json'\nimport { Cards } from '../Cards/Cards';\nimport { NewRecipe } from '../NewRecipe/NewRecipe';\nimport './Main.css'\n\nexport const Main = () => {\n\n    const [recipes, setRecipes] = useState(data)\n\n    const [modalOpen, setModalOpen] = useState(false);\n\n    const [addFormData, setAddFormData] = useState({\n        name: '',\n        description: '',\n        datePublished: '',\n        cookTime: '',\n        servingSize: '',\n        prepTime: '',\n        instructions: [],\n        ingredients:[]\n    });\n\n    const handleAddFormChange = (event) => {\n        event.preventDefault()\n\n        const fieldName = event.target.getAttribute('name');\n\n        const fieldValue = event.target.value;\n\n        const newFormData = { ...addFormData };\n\n        newFormData[fieldName] = fieldValue;\n\n        setAddFormData(newFormData);\n    }\n\n    const handleAddFormSubmit = (event) => {\n        event.preventDefault();\n\n        const newRecipe = {\n            id: Math.floor(Math.random() * 1000),\n            name: addFormData.name,\n            description: addFormData.description,\n            datePublished: addFormData.datePublished,\n            servingSize: addFormData.servingSize,\n            prepTime: addFormData.prepTime,\n            cookTime: addFormData.cookTime,\n            instructions: [addFormData.instructions],\n            ingredients: [addFormData.ingredients],\n        }\n\n        const newRecipes = [...recipes, newRecipe]\n\n        setRecipes(newRecipes)\n        console.log(recipes)\n        setModalOpen(false)\n    }\n\n    return (\n        <div>\n            <div className='main'>\n                <button\n                    className='cardBTN'\n                    onClick={() => {\n                        setModalOpen(true)\n                    }}\n                >Add New Recipe</button>\n\n                {modalOpen && <NewRecipe\n                    setModalOpen={setModalOpen}\n                    handleAddFormChange={handleAddFormChange}\n                    handleAddFormSubmit={handleAddFormSubmit}\n                />}\n\n            </div>\n            <Cards recipes={recipes} />\n        </div>\n    )\n}\n","import React from 'react'\nimport './Navbar.css'\n\nexport const Navbar = () => {\n    return (\n        <div className='navWrapper'>\n            <h1>RECI-PZ</h1>\n            <p>Your easy peasy personal cook book!</p>\n        </div>\n    )\n}\n","import './App.css';\nimport { Main } from './components/Main/Main';\nimport { Navbar } from './components/Navbar/Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Main/>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}